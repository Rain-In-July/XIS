/* ******************************************************************
 * Definition of the industry tile, its callbacks, and graphics chain
 * ******************************************************************/
        spritelayout power_plant_spritelayout_cooling_tower {
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                    // buildings (snow aware)
                    building {
                        sprite: 2047;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(127));
                    }
                    building {
                        sprite: 2047;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(117));
                    }
        }
        spritelayout power_plant_spritelayout_large_building {
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                    // buildings (snow aware)
                    building {
                        sprite: 2050;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(127));
                    }
                    building {
                        sprite: 2050;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(117));
                    }
                // smoke sprites
                building {
                    sprite: 3701 + ((animation_frame + 0)%8);
                    recolour_mode: RECOLOUR_REMAP;
                    palette: PALETTE_USE_DEFAULT;
                    xoffset: 3;
                    yoffset: 0;
                    zoffset: 36;
                    xextent: 15;
                    yextent: 7;
                    zextent: 7;
                    hide_sprite: 0;
                }
        }
        spritelayout power_plant_spritelayout_small_building {
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                    // buildings (snow aware)
                    building {
                        sprite: 2053;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(127));
                    }
                    building {
                        sprite: 2053;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(117));
                    }
        }
        spritelayout power_plant_spritelayout_substation {
            // Industry-specific ground (snow aware)
            // non-snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (LOAD_TEMP(13));
                always_draw: 1;
            }
            // snow
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
            childsprite {
                sprite: 2022;
                recolour_mode: RECOLOUR_REMAP;
                palette: PALETTE_USE_DEFAULT;
                hide_sprite: (!LOAD_TEMP(13));
                always_draw: 1;
            }
                    // buildings (snow aware)
                    building {
                        sprite: 2054;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(127));
                    }
                    building {
                        sprite: 2054;
                        recolour_mode: RECOLOUR_REMAP;
                        palette: PALETTE_USE_DEFAULT;
                        xoffset: 0;
                        yoffset: 0;
                        zoffset: 0;
                        xextent: 16;
                        yextent: 16;
                        zextent: 16;
                        always_draw: 0;
                        hide_sprite: (LOAD_TEMP(117));
                    }
        }
        switch(FEAT_INDUSTRYTILES, SELF, power_plant_industry_layout_1_graphics_switch, relative_pos) {
                relative_coord(0, 0): power_plant_spritelayout_cooling_tower;
                relative_coord(0, 1): power_plant_spritelayout_small_building;
                relative_coord(1, 0): power_plant_spritelayout_cooling_tower;
                relative_coord(1, 1): power_plant_spritelayout_large_building;
                relative_coord(2, 0): power_plant_spritelayout_cooling_tower;
                relative_coord(2, 1): power_plant_spritelayout_large_building;
                relative_coord(3, 0): power_plant_spritelayout_substation;
                relative_coord(3, 1): power_plant_spritelayout_substation;
            power_plant_spritelayout_cooling_tower; // a default is needed, but should never be reached, layout definitions are explicit
        }
        switch(FEAT_INDUSTRYTILES, SELF, power_plant_industry_layout_2_graphics_switch, relative_pos) {
                relative_coord(0, 1): power_plant_spritelayout_cooling_tower;
                relative_coord(0, 2): power_plant_spritelayout_cooling_tower;
                relative_coord(1, 0): power_plant_spritelayout_large_building;
                relative_coord(1, 1): power_plant_spritelayout_large_building;
                relative_coord(1, 2): power_plant_spritelayout_cooling_tower;
                relative_coord(2, 0): power_plant_spritelayout_small_building;
                relative_coord(2, 1): power_plant_spritelayout_substation;
                relative_coord(2, 2): power_plant_spritelayout_small_building;
            power_plant_spritelayout_cooling_tower; // a default is needed, but should never be reached, layout definitions are explicit
        }
        switch(FEAT_INDUSTRYTILES, SELF, power_plant_industry_layout_3_graphics_switch, relative_pos) {
                relative_coord(0, 0): power_plant_spritelayout_cooling_tower;
                relative_coord(0, 1): power_plant_spritelayout_cooling_tower;
                relative_coord(1, 0): power_plant_spritelayout_small_building;
                relative_coord(1, 1): power_plant_spritelayout_large_building;
                relative_coord(2, 0): power_plant_spritelayout_substation;
                relative_coord(2, 1): power_plant_spritelayout_small_building;
            power_plant_spritelayout_cooling_tower; // a default is needed, but should never be reached, layout definitions are explicit
        }
    switch(FEAT_INDUSTRYTILES, PARENT, power_plant_industry_graphics_switch_layouts, layout_num) {
            1: power_plant_industry_layout_1_graphics_switch;
            2: power_plant_industry_layout_2_graphics_switch;
            3: power_plant_industry_layout_3_graphics_switch;
        power_plant_industry_layout_1_graphics_switch; // default
    }
    switch(FEAT_INDUSTRYTILES, SELF, power_plant_industry_construction_state_graphics_switch, construction_state) {
        0..2: spritelayout_default_construction_states;
        power_plant_industry_graphics_switch_layouts; // default
    }
    switch(FEAT_INDUSTRYTILES, SELF, power_plant_store_temp_vars,
            [STORE_TEMP(terrain_type == TILETYPE_SNOW, 13)
                    , STORE_TEMP(0,
                                 127) 
                    , STORE_TEMP(construction_state != 3 ? 1 : LOAD_TEMP(127),
                                 127)
                    , STORE_TEMP(LOAD_TEMP(13) == 0 ? 1 : LOAD_TEMP(127), 
                                 117) 
                    , STORE_TEMP(LOAD_TEMP(13) == 1 ? 1 : LOAD_TEMP(127), 
                                 127)
            ]) {
        power_plant_industry_construction_state_graphics_switch; // default
    }
    switch(FEAT_INDUSTRYTILES, PARENT, power_plant_industry_master_graphics_switch, STORE_TEMP(random_bits, 14)) {
        power_plant_store_temp_vars; // default
    }
    switch (FEAT_INDUSTRYTILES, SELF, power_plant_tile_fence_station, [
                STORE_TEMP(LOAD_TEMP(9) * (nearby_tile_class(-1,  0) != TILE_CLASS_STATION), 9),
                STORE_TEMP(LOAD_TEMP(10) * (nearby_tile_class( 0, -1) != TILE_CLASS_STATION), 10),
                STORE_TEMP(LOAD_TEMP(11) * (nearby_tile_class( 0,  1) != TILE_CLASS_STATION), 11),
                STORE_TEMP(LOAD_TEMP(12) * (nearby_tile_class( 1,  0) != TILE_CLASS_STATION), 12),
            ]) {
        power_plant_industry_master_graphics_switch;
    }
    switch (FEAT_INDUSTRYTILES, SELF, power_plant_tile_fence_industry, [
                STORE_TEMP(LOAD_TEMP(9) * !nearby_tile_is_same_industry(-1,  0), 9),
                STORE_TEMP(LOAD_TEMP(10) * !nearby_tile_is_same_industry( 0, -1), 10),
                STORE_TEMP(LOAD_TEMP(11) * !nearby_tile_is_same_industry( 0,  1), 11),
                STORE_TEMP(LOAD_TEMP(12) * !nearby_tile_is_same_industry( 1,  0), 12),
            ]) {
        power_plant_tile_fence_station;
    }
    switch (FEAT_INDUSTRYTILES, SELF, power_plant_tile_fences, [
                STORE_TEMP(0, 1),
                STORE_TEMP(0, 2),
                STORE_TEMP(0, 3),
                STORE_TEMP(0, 4),
                STORE_TEMP(1, 9),
                STORE_TEMP(1, 10),
                STORE_TEMP(1, 11),
                STORE_TEMP(1, 12),
                STORE_TEMP(0, 5),
                STORE_TEMP(0, 6),
                STORE_TEMP(0, 7),
                STORE_TEMP(0, 8),
                ]) {
        power_plant_tile_fence_industry;
    }
    switch(FEAT_INDUSTRYTILES, SELF, power_plant_tile_1_lc_2,
        (nearby_tile_class( 1,  1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class( 1,  0) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class( 1, -1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class( 0, -1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class(-1, -1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class(-1,  0) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class(-1,  1) == TILE_CLASS_INDUSTRY) |
        (nearby_tile_class( 0,  1) == TILE_CLASS_INDUSTRY)) {
        1: return CB_RESULT_LOCATION_DISALLOW;
        return CB_RESULT_LOCATION_ALLOW;
    }
    switch (FEAT_INDUSTRYTILES, PARENT, power_plant_tile_1_lc_1, (
                (((extra_callback_info2 & 0xFF00) >> 8) == IND_CREATION_FUND) ||
                (((extra_callback_info2 & 0xFF00) >> 8) == IND_CREATION_PROSPECT)
                )
            ) {
        1: return CB_RESULT_LOCATION_ALLOW;
        power_plant_tile_1_lc_2;
    }
    switch (FEAT_INDUSTRYTILES, SELF, power_plant_tile_1_lc_0,
                (
                nearby_tile_height(-relative_x, -relative_y)
                + (nearby_tile_slope(-relative_x, -relative_y)
                == SLOPE_FLAT ? 0 :
                nearby_tile_slope(-relative_x, -relative_y) == bitmask(IS_STEEP_SLOPE) ? 2 : 1
                )) == (nearby_tile_height(0, 0)
                + (nearby_tile_slope(0, 0)
                == SLOPE_FLAT ? 0 :
                nearby_tile_slope(0, 0) == bitmask(IS_STEEP_SLOPE) ? 2 : 1))
                ) {
        1: power_plant_tile_1_lc_1;
        return CB_RESULT_LOCATION_DISALLOW;
    }
    switch(FEAT_INDUSTRYTILES, SELF, power_plant_tile_1_anim_control, (extra_callback_info1 % 7)) {
            0: return 0;
            1: return 1;
            2: return 2;
            3: return 3;
            4: return 4;
            5: return 5;
            6: return 6;
        return CB_RESULT_NEXT_FRAME;
    }
    item(FEAT_INDUSTRYTILES, power_plant_tile_1, 189) {
        property {
            substitute:         0;
            land_shape_flags:   0;
                animation_info: [ANIMATION_LOOPING, 7];
                animation_speed: 3;
            animation_triggers: bitmask(ANIM_TRIGGER_INDTILE_CONSTRUCTION_STATE);
        }
        graphics {
    		    tile_check: power_plant_tile_1_lc_0;
    		    anim_control: power_plant_tile_1_anim_control;
            power_plant_tile_fences;
        }
    }
        if (economy==2) {
                item(FEAT_INDUSTRYTILES, power_plant_tile_1, 189) {
                    property {
                        accepted_cargos:  [[cargotype("COAL"), 8],[cargotype("PETR"), 8],[cargotype("PEAT"), 8]];
                    }
                }
        }
        if (economy==0) {
        }
        if (economy==1) {
                item(FEAT_INDUSTRYTILES, power_plant_tile_1, 189) {
                    property {
                        accepted_cargos:  [[cargotype("PEAT"), 8]];
                    }
                }
        }
        if (economy==4) {
        }
        if (economy==5) {
        }
        if (economy==3) {
        }
/* *************************************************
 * Definition of the industry
 * *************************************************/
    tilelayout power_plant_industry_layout_1_tilelayout {
            0, 0: power_plant_tile_1;
            0, 1: power_plant_tile_1;
            1, 0: power_plant_tile_1;
            1, 1: power_plant_tile_1;
            2, 0: power_plant_tile_1;
            2, 1: power_plant_tile_1;
            3, 0: power_plant_tile_1;
            3, 1: power_plant_tile_1;
    }
    tilelayout power_plant_industry_layout_2_tilelayout {
            0, 1: power_plant_tile_1;
            0, 2: power_plant_tile_1;
            1, 0: power_plant_tile_1;
            1, 1: power_plant_tile_1;
            1, 2: power_plant_tile_1;
            2, 0: power_plant_tile_1;
            2, 1: power_plant_tile_1;
            2, 2: power_plant_tile_1;
    }
    tilelayout power_plant_industry_layout_3_tilelayout {
            0, 0: power_plant_tile_1;
            0, 1: power_plant_tile_1;
            1, 0: power_plant_tile_1;
            1, 1: power_plant_tile_1;
            2, 0: power_plant_tile_1;
            2, 1: power_plant_tile_1;
    }
switch(FEAT_INDUSTRIES, SELF, power_plant_check_availability_param, restrict_open_during_gameplay) {
	1..255: return CB_RESULT_IND_NO_CONSTRUCTION;         // disallow when restrictions in place
	return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;       // we may build
}
switch (FEAT_INDUSTRIES, SELF, power_plant_check_map_gen, extra_callback_info2 == IND_CREATION_GENERATION) {
	1: return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
	power_plant_check_availability_param;
}
switch (FEAT_INDUSTRIES, SELF, power_plant_available_game_mode, game_mode == GAMEMODE_GAME) {
	1: power_plant_check_map_gen;
	return CB_RESULT_IND_PROBABILITY_FROM_PROPERTY;
}
    /* 1900 */
    switch (FEAT_INDUSTRIES, SELF, power_plant_check_availability_2, current_date) {
        date(1900,1,1) .. date(5000000,12,31): power_plant_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 1900 */
    switch (FEAT_INDUSTRIES, SELF, power_plant_check_availability_0, current_date) {
        date(1900,1,1) .. date(5000000,12,31): power_plant_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 1900 */
    switch (FEAT_INDUSTRIES, SELF, power_plant_check_availability_1, current_date) {
        date(1900,1,1) .. date(5000000,12,31): power_plant_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 1900 */
    switch (FEAT_INDUSTRIES, SELF, power_plant_check_availability_4, current_date) {
        date(1900,1,1) .. date(5000000,12,31): power_plant_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 1900 */
    switch (FEAT_INDUSTRIES, SELF, power_plant_check_availability_5, current_date) {
        date(1900,1,1) .. date(5000000,12,31): power_plant_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
    /* 1900 */
    switch (FEAT_INDUSTRIES, SELF, power_plant_check_availability_3, current_date) {
        date(1900,1,1) .. date(5000000,12,31): power_plant_available_game_mode;
        return CB_RESULT_IND_NO_CONSTRUCTION;
    }
switch (FEAT_INDUSTRIES, SELF, power_plant_check_availability, economy) {
        2: power_plant_check_availability_2;
        0: power_plant_check_availability_0;
        1: power_plant_check_availability_1;
        4: power_plant_check_availability_4;
        5: power_plant_check_availability_5;
        3: power_plant_check_availability_3;
}
    switch (FEAT_INDUSTRIES, SELF, power_plant_min_distance_50, industry_distance(50)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        return CB_RESULT_LOCATION_ALLOW;
    }
    switch (FEAT_INDUSTRIES, SELF, power_plant_min_distance_19, industry_distance(19)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        power_plant_min_distance_50;
    }
    switch (FEAT_INDUSTRIES, SELF, power_plant_min_distance_51, industry_distance(51)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        power_plant_min_distance_19;
    }
    switch (FEAT_INDUSTRIES, SELF, power_plant_min_distance_0, industry_distance(0)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        power_plant_min_distance_51;
    }
    switch (FEAT_INDUSTRIES, SELF, power_plant_min_distance_5, industry_distance(5)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        power_plant_min_distance_0;
    }
    switch (FEAT_INDUSTRIES, SELF, power_plant_min_distance_31, industry_distance(31)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        power_plant_min_distance_5;
    }
    switch (FEAT_INDUSTRIES, SELF, power_plant_min_distance_17, industry_distance(17)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        power_plant_min_distance_31;
    }
    switch (FEAT_INDUSTRIES, SELF, power_plant_min_distance_46, industry_distance(46)) {
        0 .. 16: return CB_RESULT_LOCATION_DISALLOW;
        power_plant_min_distance_17;
    }
    switch (FEAT_INDUSTRIES, SELF, power_plant_min_distance_66, industry_distance(66)) {
        0 .. 56: return CB_RESULT_LOCATION_DISALLOW;
        power_plant_min_distance_46;
    }
    switch (FEAT_INDUSTRIES, SELF, power_plant_check_location, (
                (extra_callback_info2 == IND_CREATION_FUND) ||
                (extra_callback_info2 == IND_CREATION_PROSPECT)
                )
            ) {
        1: return CB_RESULT_LOCATION_ALLOW;
        power_plant_min_distance_66;
    }
        if (economy==2) {
            item(FEAT_INDUSTRIES, power_plant, 66) {
                property {
                    substitute: 0;
                    override: 0;
                    map_colour: 168;
                    life_type: IND_LIFE_TYPE_BLACK_HOLE;
                    min_cargo_distr: 5;
                    spec_flags: 0;
                    layouts: [power_plant_industry_layout_1_tilelayout,power_plant_industry_layout_2_tilelayout,power_plant_industry_layout_3_tilelayout];
                    conflicting_ind_types: []; // set this prop empty, FIRS has it's own better checks for this
                    random_sound_effects: []; // set this empty to avoid spurious default industry sounds (as of May 2017 FIRS does not yet use sound effects)
                    name: string(STR_IND_POWER_PLANT);
                    prod_multiplier: [0, 0];
                    input_multiplier_1: [0, 0];
                    input_multiplier_2: [0, 0];
                    input_multiplier_3: [0, 0];
                    prob_random: 5;
                    prob_in_game: 3;
                    prospect_chance: 0.75;
                    fund_cost_multiplier: 15;
                    remove_cost_multiplier: 0;
                    remove_cost_multiplier: 0;
                    accept_cargo_types: [cargotype("COAL"),cargotype("PETR"),cargotype("PEAT")];
                    prod_cargo_types: [];
                    nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_POWERHUNGRY));
                }
            }
        }
        if (economy==1) {
            item(FEAT_INDUSTRIES, power_plant, 66) {
                property {
                    substitute: 0;
                    override: 0;
                    map_colour: 168;
                    life_type: IND_LIFE_TYPE_BLACK_HOLE;
                    min_cargo_distr: 5;
                    spec_flags: 0;
                    layouts: [power_plant_industry_layout_1_tilelayout,power_plant_industry_layout_2_tilelayout,power_plant_industry_layout_3_tilelayout];
                    conflicting_ind_types: []; // set this prop empty, FIRS has it's own better checks for this
                    random_sound_effects: []; // set this empty to avoid spurious default industry sounds (as of May 2017 FIRS does not yet use sound effects)
                    name: string(STR_IND_POWER_PLANT);
                    prod_multiplier: [0, 0];
                    input_multiplier_1: [0, 0];
                    input_multiplier_2: [0, 0];
                    input_multiplier_3: [0, 0];
                    prob_random: 5;
                    prob_in_game: 3;
                    prospect_chance: 0.75;
                    fund_cost_multiplier: 15;
                    remove_cost_multiplier: 0;
                    remove_cost_multiplier: 0;
                    accept_cargo_types: [cargotype("PEAT")];
                    prod_cargo_types: [];
                    nearby_station_name: string(STR_STATION, string(STR_TOWN),string(STR_STATION_POWERHUNGRY));
                }
            }
        }
        if (economy==2) {
            item(FEAT_INDUSTRIES, power_plant, 66) {
                graphics {
                    construction_probability: power_plant_check_availability;
                    build_prod_change:        randomise_primary_production_on_build;
                    location_check:           power_plant_check_location;
                    extra_text_fund:          return string(STR_FUND_AVAILABLE_FROM, 1900);
                    colour:                   switch_colour;
                }
            }
        }
        if (economy==1) {
            item(FEAT_INDUSTRIES, power_plant, 66) {
                graphics {
                    construction_probability: power_plant_check_availability;
                    build_prod_change:        randomise_primary_production_on_build;
                    location_check:           power_plant_check_location;
                    extra_text_fund:          return string(STR_FUND_AVAILABLE_FROM, 1900);
                    colour:                   switch_colour;
                }
            }
        }